name: Starcrossed CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: starcrossed_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: server/package-lock.json
    
    - name: Install dependencies
      run: cd server && npm ci
    
    - name: Run tests
      run: cd server && npm test
      env:
        DB_USER: postgres
        DB_HOST: localhost
        DB_NAME: starcrossed_test
        DB_PASSWORD: postgres
        DB_PORT: 5432
        JWT_SECRET: test_jwt_secret
  
  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: client/package-lock.json
    
    - name: Install dependencies
      run: cd client && npm ci
    
    - name: Build
      run: cd client && npm run build

  deploy:
    needs: [test-backend, test-frontend]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Install dependencies (backend)
      run: cd server && npm ci
    
    - name: Install dependencies (frontend)
      run: cd client && npm ci
    
    - name: Build frontend
      run: cd client && npm run build
    
    # Add deployment steps here when ready
    # Examples would include:
    # - Deploy to Heroku
    # - Deploy to AWS
    # - etc.
